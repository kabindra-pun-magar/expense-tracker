{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\expense-tracker-pro\\\\frontend\\\\src\\\\components\\\\auth\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\n// src/components/Auth/ResetPassword.js\nimport React, { useState } from 'react';\nimport { resetPassword } from '../../api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const submit = async e => {\n    e.preventDefault();\n    const res = await resetPassword(token, {\n      password\n    });\n    if (res.message) {\n      alert('Password reset successful');\n      navigate('/login');\n    } else {\n      alert(res.error || 'Failed to reset password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    className: \"form\",\n    style: {\n      maxWidth: 400,\n      margin: '20px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Set a New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"New password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Reset password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"ObF4f3zj+R2ilq8vJz6QIPahwZY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","resetPassword","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","password","setPassword","submit","e","preventDefault","res","message","alert","error","onSubmit","className","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/PROJECTS/expense-tracker-pro/frontend/src/components/auth/ResetPassword.js"],"sourcesContent":["// src/components/Auth/ResetPassword.js\r\nimport React, { useState } from 'react';\r\nimport { resetPassword } from '../../api';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nexport default function ResetPassword() {\r\n  const { token } = useParams();\r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState('');\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await resetPassword(token, { password });\r\n    if (res.message) {\r\n      alert('Password reset successful');\r\n      navigate('/login');\r\n    } else {\r\n      alert(res.error || 'Failed to reset password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submit} className=\"form\" style={{maxWidth:400, margin:'20px auto'}}>\r\n      <h3>Set a New Password</h3>\r\n      <label>New password</label>\r\n      <input type=\"password\" value={password} onChange={e=>setPassword(e.target.value)} required />\r\n      <button type=\"submit\">Reset password</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,WAAW;AACzC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC7B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,MAAM,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAG,MAAMd,aAAa,CAACO,KAAK,EAAE;MAAEE;IAAS,CAAC,CAAC;IACpD,IAAIK,GAAG,CAACC,OAAO,EAAE;MACfC,KAAK,CAAC,2BAA2B,CAAC;MAClCR,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLQ,KAAK,CAACF,GAAG,CAACG,KAAK,IAAI,0BAA0B,CAAC;IAChD;EACF,CAAC;EAED,oBACEb,OAAA;IAAMc,QAAQ,EAAEP,MAAO;IAACQ,SAAS,EAAC,MAAM;IAACC,KAAK,EAAE;MAACC,QAAQ,EAAC,GAAG;MAAEC,MAAM,EAAC;IAAW,CAAE;IAAAC,QAAA,gBACjFnB,OAAA;MAAAmB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BvB,OAAA;MAAAmB,QAAA,EAAO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3BvB,OAAA;MAAOwB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEpB,QAAS;MAACqB,QAAQ,EAAElB,CAAC,IAAEF,WAAW,CAACE,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;MAACG,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7FvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEX;AAACrB,EAAA,CAxBuBD,aAAa;EAAA,QACjBJ,SAAS,EACVC,WAAW;AAAA;AAAA+B,EAAA,GAFN5B,aAAa;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}